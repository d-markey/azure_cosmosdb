<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2024-01-21" filename="distance_calculator.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="1.0" lines-covered="11" lines-valid="11" package="/spatial" testname="lcov.info" version="1.5">
<lines>
<line>
<code>import 'point.dart';</code>
</line>
<line>
<code>import 'shape.dart';</code>
</line>
<line>
<code/>
</line>
<line>
<code>/// Base class for distance calculation algorithms.</code>
</line>
<line>
<code>abstract class DistanceCalculator {</code>
</line>
<line hits="2">
<code>  const DistanceCalculator();</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Computes the distance between points [from] and [to].</code>
</line>
<line>
<code>  double? distance(Point from, Point to);</code>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Computes the length of a line or polygon by adding up distances between</code>
</line>
<line>
<code>  /// consecutive [Point]s making it up. Returns `null` if [distance] return</code>
</line>
<line>
<code>  /// `null` for any two consecutive [Point]s.</code>
</line>
<line hits="2">
<code>  double? measure(Shape shape) {</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>    double dist = 0;</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="3">
<code>    for (var path in shape.paths) {</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>      var current = path.first;</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="3">
<code>      for (var next in path.skip(1)) {</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>        var d = distance(current, next);</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>        if (d == null) return null;</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>        dist += d;</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>        current = next;</code>
</line>
<line>
<code>      }</code>
</line>
<line>
<code>    }</code>
</line>
<line hits="1">
<code>    return dist;</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>  }</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
<base href="../"/>
<base href="../"/>
</coverage>
