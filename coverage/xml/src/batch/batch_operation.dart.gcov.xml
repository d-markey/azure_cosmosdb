<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2023-01-07" filename="batch_operation.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.93333334" lines-covered="14" lines-valid="15" package="/src/batch" testname="lcov.info" version="1.5">
<lines>
<line>
<code>import 'dart:convert';</code>
</line>
<line>
<code/>
</line>
<line>
<code>import '../base_document.dart';</code>
</line>
<line>
<code>import '../partition/partition_key.dart';</code>
</line>
<line>
<code>import '../partition/partition_key_spec.dart';</code>
</line>
<line>
<code/>
</line>
<line>
<code>class BatchOperationType {</code>
</line>
<line hits="1">
<code>  const BatchOperationType._(this.name);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  final String name;</code>
</line>
<line>
<code/>
</line>
<line>
<code>  static const create = BatchOperationType._('Create');</code>
</line>
<line>
<code>  static const upsert = BatchOperationType._('Upsert');</code>
</line>
<line>
<code>  static const read = BatchOperationType._('Read');</code>
</line>
<line>
<code>  static const delete = BatchOperationType._('Delete');</code>
</line>
<line>
<code>  static const replace = BatchOperationType._('Replace');</code>
</line>
<line>
<code>  static const patch = BatchOperationType._('Patch');</code>
</line>
<line>
<code>}</code>
</line>
<line>
<code/>
</line>
<line>
<code>abstract class BatchOperation {</code>
</line>
<line hits="1">
<code>  BatchOperation({PartitionKeySpec? partitionKeySpec, this.partitionKey})</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="0">
<code>      : partitionKeySpec = partitionKeySpec ?? PartitionKeySpec.id;</code>
</line>
<line>
<code/>
</line>
<line>
<code>  final PartitionKey? partitionKey;</code>
</line>
<line>
<code>  final PartitionKeySpec? partitionKeySpec;</code>
</line>
<line>
<code/>
</line>
<line>
<code>  BatchOperationType get op;</code>
</line>
<line>
<code/>
</line>
<line hits="5">
<code>  Map&lt;String, dynamic&gt; toJson() =&gt; {'operationType': op.name};</code>
<hit count="5" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>}</code>
</line>
<line>
<code/>
</line>
<line>
<code>abstract class BatchOperationOnItem&lt;T extends BaseDocument&gt;</code>
</line>
<line>
<code>    extends BatchOperation {</code>
</line>
<line hits="1">
<code>  BatchOperationOnItem(this.item,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>      {PartitionKeySpec? partitionKeySpec, PartitionKey? partitionKey})</code>
</line>
<line hits="1">
<code>      : super(partitionKey: partitionKey, partitionKeySpec: partitionKeySpec);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  final T item;</code>
</line>
<line>
<code/>
</line>
<line hits="1">
<code>  @override</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>  Map&lt;String, dynamic&gt; toJson() =&gt; super.toJson()</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="3">
<code>    ..addAll({</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line hits="3">
<code>      'id': item.id,</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>      'partitionKey': jsonEncode(</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="5">
<code>          (partitionKey ?? (partitionKeySpec ?? PartitionKeySpec.id).from(item))</code>
<hit count="5" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>              ?.values),</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="3">
<code>      'resourceBody': item.toJson(),</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>    });</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
<base href="../../"/>
<base href="../../"/>
</coverage>
