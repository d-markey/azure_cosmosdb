<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2023-01-07" filename="transactional_batch.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.03448276" lines-covered="1" lines-valid="29" package="/src/batch" testname="lcov.info" version="1.5">
<lines>
<line>
<code>import '../_internal/_http_header.dart';</code>
</line>
<line>
<code>import '../_internal/_linq_extensions.dart';</code>
</line>
<line>
<code>import '../base_document.dart';</code>
</line>
<line>
<code>import '../cosmos_db_container.dart';</code>
</line>
<line>
<code>import '../partition/partition_key.dart';</code>
</line>
<line>
<code>import '../permissions/cosmos_db_permission.dart';</code>
</line>
<line>
<code>import 'batch_operation.dart';</code>
</line>
<line>
<code>import 'batch_operation_create.dart';</code>
</line>
<line>
<code>import 'batch_operation_delete.dart';</code>
</line>
<line>
<code>import 'batch_operation_read.dart';</code>
</line>
<line>
<code>import 'batch_operation_upsert.dart';</code>
</line>
<line>
<code>import 'batch_response.dart';</code>
</line>
<line>
<code/>
</line>
<line>
<code>class TransactionalBatch&lt;T extends BaseDocument&gt; extends SpecialDocument {</code>
</line>
<line hits="0">
<code>  TransactionalBatch.atomic(this.container)</code>
</line>
<line>
<code>      : isAtomic = true,</code>
</line>
<line>
<code>        continueOnError = false;</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  TransactionalBatch(this.container, {this.continueOnError = true})</code>
</line>
<line>
<code>      : isAtomic = false;</code>
</line>
<line>
<code/>
</line>
<line>
<code>  final CosmosDbContainer container;</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  Map&lt;String, String&gt; get headers =&gt; {</code>
</line>
<line>
<code>        HttpHeader.msCosmosIsBatchRequest: 'true',</code>
</line>
<line hits="0">
<code>        HttpHeader.msCosmosBatchAtomic: isAtomic ? 'true' : 'false',</code>
</line>
<line>
<code>        HttpHeader.msCosmosBatchContinueOnError:</code>
</line>
<line hits="0">
<code>            continueOnError ? 'true' : 'false',</code>
</line>
<line>
<code>        HttpHeader.msDocumentDbPartitionKeyRangeId: '0',</code>
</line>
<line>
<code>      };</code>
</line>
<line>
<code/>
</line>
<line>
<code>  final bool isAtomic;</code>
</line>
<line>
<code>  final bool continueOnError;</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  final _ops = &lt;BatchOperation&gt;[];</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  Iterable&lt;BatchOperation&gt; get operations =&gt; _ops.asIterable();</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  void _add(BatchOperation op) {</code>
</line>
<line hits="0">
<code>    if (_ops.length &gt;= 100) {</code>
</line>
<line hits="0">
<code>      throw Exception('Transactional batch is limited to 100 operations.');</code>
</line>
<line>
<code>    }</code>
</line>
<line hits="0">
<code>    _ops.add(op);</code>
</line>
<line hits="0">
<code>  }</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  void create(T item, {PartitionKey? partitionKey}) =&gt;</code>
</line>
<line hits="0">
<code>      _add(BatchOperationCreate(item,</code>
</line>
<line hits="0">
<code>          partitionKeySpec: container.partitionKeySpec,</code>
</line>
<line hits="0">
<code>          partitionKey: partitionKey));</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  void upsert(T item, {PartitionKey? partitionKey}) =&gt;</code>
</line>
<line hits="0">
<code>      _add(BatchOperationUpsert(item,</code>
</line>
<line hits="0">
<code>          partitionKeySpec: container.partitionKeySpec,</code>
</line>
<line>
<code>          partitionKey: partitionKey));</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  void read(String id, {PartitionKey? partitionKey}) =&gt;</code>
</line>
<line hits="0">
<code>      _add(BatchOperationRead(id,</code>
</line>
<line hits="0">
<code>          partitionKeySpec: container.partitionKeySpec,</code>
</line>
<line>
<code>          partitionKey: partitionKey));</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  void delete(String id, {PartitionKey? partitionKey}) =&gt;</code>
</line>
<line hits="0">
<code>      _add(BatchOperationDelete(id,</code>
</line>
<line hits="0">
<code>          partitionKeySpec: container.partitionKeySpec,</code>
</line>
<line>
<code>          partitionKey: partitionKey));</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  Future&lt;BatchResponse&lt;T&gt;&gt; execute({CosmosDbPermission? permission}) =&gt;</code>
</line>
<line hits="0">
<code>      container.execute&lt;T&gt;(this, permission: permission);</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  @override</code>
</line>
<line hits="1">
<code>  List&lt;dynamic&gt; toJson() =&gt; _ops.map((o) =&gt; o.toJson()).toList();</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
<base href="../../"/>
<base href="../../"/>
</coverage>
