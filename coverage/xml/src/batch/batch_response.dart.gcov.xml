<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2023-01-07" filename="batch_response.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.0" lines-covered="0" lines-valid="19" package="/src/batch" testname="lcov.info" version="1.5">
<lines>
<line>
<code>import '../_internal/_linq_extensions.dart';</code>
</line>
<line>
<code>import '../base_document.dart';</code>
</line>
<line>
<code>import '../client/http_status_codes.dart';</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>class BatchResponse&lt;T extends BaseDocument&gt; {</code>
</line>
<line hits="0">
<code>  final _results = &lt;BatchOperationResult&lt;T&gt;&gt;[];</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  int get length =&gt; _results.length;</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  T? operator [](int i) =&gt; _results[i].item;</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  bool get success =&gt; _results.every((r) =&gt; r.success);</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  Iterable&lt;BatchOperationResult&lt;T&gt;&gt; get results =&gt; _results.asIterable();</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  Iterable&lt;BatchOperationResult&lt;T&gt;&gt; get errors =&gt;</code>
</line>
<line hits="0">
<code>      _results.where((r) =&gt; !r.success);</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  static BatchResponse&lt;T&gt; build&lt;T extends BaseDocument&gt;(</code>
</line>
<line>
<code>      List json, DocumentBuilder&lt;T&gt; builder) {</code>
</line>
<line hits="0">
<code>    final resp = BatchResponse&lt;T&gt;();</code>
</line>
<line hits="0">
<code>    for (var i = 0; i &lt; json.length; i++) {</code>
</line>
<line hits="0">
<code>      final entry = json[i];</code>
</line>
<line hits="0">
<code>      final item = entry['resourceBody'];</code>
</line>
<line hits="0">
<code>      final doc = (item == null) ? null : builder(item);</code>
</line>
<line hits="0">
<code>      resp._results.add(BatchOperationResult(i, entry['statusCode'], doc));</code>
</line>
<line>
<code>    }</code>
</line>
<line hits="0">
<code>    return resp;</code>
</line>
<line hits="0">
<code>  }</code>
</line>
<line>
<code>}</code>
</line>
<line>
<code/>
</line>
<line>
<code>class BatchOperationResult&lt;T extends BaseDocument&gt; {</code>
</line>
<line hits="0">
<code>  BatchOperationResult(this.index, this.statusCode, this.item);</code>
</line>
<line>
<code/>
</line>
<line>
<code>  final int index;</code>
</line>
<line>
<code>  final int statusCode;</code>
</line>
<line>
<code>  final T? item;</code>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  bool get success =&gt; HttpStatusCode.success(statusCode);</code>
</line>
<line>
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
<base href="../../"/>
<base href="../../"/>
</coverage>
