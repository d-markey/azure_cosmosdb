<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2025-01-06" filename="cosmos_db_exceptions.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.7536232" lines-covered="52" lines-valid="69" package="src" testname="lcov.info" version="1.6">
<lines>
<line number="1">
<code>import 'dart:async';</code>
</line>
<line number="2">
<code/>
</line>
<line number="3">
<code>import 'package:meta/meta.dart';</code>
</line>
<line number="4">
<code/>
</line>
<line number="5">
<code>import '_internal/_http_call.dart';</code>
</line>
<line number="6">
<code>import 'client/http_status_codes.dart';</code>
</line>
<line number="7">
<code/>
</line>
<line number="8">
<code>abstract class InternalException implements Exception {</code>
</line>
<line hits="1" number="9">
<code>  InternalException._(String? message) : message = message ?? '';</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="10">
<code/>
</line>
<line number="11">
<code>  final String message;</code>
</line>
<line number="12">
<code/>
</line>
<line hits="0" number="13">
<code>  @override</code>
</line>
<line number="14">
<code>  String toString() =&gt;</code>
</line>
<line hits="0" number="15">
<code>      message.isNotEmpty ? '$runtimeType: $message' : runtimeType.toString();</code>
</line>
<line number="16">
<code>}</code>
</line>
<line number="17">
<code/>
</line>
<line number="18">
<code>class ApplicationException extends InternalException {</code>
</line>
<line hits="2" number="19">
<code>  ApplicationException(String message) : super._(message);</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line number="20">
<code>}</code>
</line>
<line number="21">
<code/>
</line>
<line number="22">
<code>class ParsingException extends ApplicationException {</code>
</line>
<line hits="2" number="23">
<code>  ParsingException(String message) : super(message);</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line number="24">
<code>}</code>
</line>
<line number="25">
<code/>
</line>
<line number="26">
<code>class PartitionKeyException extends ApplicationException {</code>
</line>
<line hits="2" number="27">
<code>  PartitionKeyException(String message) : super(message);</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line number="28">
<code>}</code>
</line>
<line number="29">
<code/>
</line>
<line number="30">
<code>abstract class ContextualizedException extends InternalException {</code>
</line>
<line hits="1" number="31">
<code>  ContextualizedException._(String method, this.url, String? message)</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="32">
<code>      : method = method.toUpperCase(),</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="33">
<code>        super._(message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="34">
<code/>
</line>
<line number="35">
<code>  ContextualizedException _withContext(String method, String url);</code>
</line>
<line number="36">
<code/>
</line>
<line number="37">
<code>  final String method;</code>
</line>
<line number="38">
<code>  final String url;</code>
</line>
<line number="39">
<code/>
</line>
<line hits="0" number="40">
<code>  bool get hasContext =&gt; method.isNotEmpty &amp;&amp; url.isNotEmpty;</code>
</line>
<line number="41">
<code/>
</line>
<line hits="0" number="42">
<code>  @override</code>
</line>
<line number="43">
<code>  String toString() =&gt;</code>
</line>
<line hits="0" number="44">
<code>      hasContext ? '$method $url: ${super.toString()}' : super.toString();</code>
</line>
<line number="45">
<code>}</code>
</line>
<line number="46">
<code/>
</line>
<line number="47">
<code>/// Base [CosmosDbException] class for CosmosDB errors.</code>
</line>
<line number="48">
<code>class CosmosDbException extends ContextualizedException {</code>
</line>
<line hits="1" number="49">
<code>  CosmosDbException._(</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="50">
<code>      String method, String url, this.statusCode, String? message)</code>
</line>
<line hits="1" number="51">
<code>      : super._(method, url, message ?? 'Error $statusCode');</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="52">
<code/>
</line>
<line hits="1" number="53">
<code>  factory CosmosDbException._internal(String method, String url, int statusCode,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="54">
<code>      [String? message]) {</code>
</line>
<line hits="0" number="55">
<code>    message ??= 'Error $statusCode';</code>
</line>
<line number="56">
<code>    switch (statusCode) {</code>
</line>
<line hits="1" number="57">
<code>      case HttpStatusCode.notModified:</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="58">
<code>        return NotModifiedException._(method, url, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="59">
<code>      case HttpStatusCode.unauthorized:</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="60">
<code>        return UnauthorizedException._(method, url, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="61">
<code>      case HttpStatusCode.badRequest:</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="62">
<code>        return BadRequestException._(method, url, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="63">
<code>      case HttpStatusCode.forbidden:</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="64">
<code>        return ForbiddenException._(method, url, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="65">
<code>      case HttpStatusCode.notFound:</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="66">
<code>        return NotFoundException._(method, url, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="67">
<code>      case HttpStatusCode.conflict:</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="68">
<code>        return ConflictException._(method, url, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="69">
<code>      case HttpStatusCode.preconditionFailure:</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="70">
<code>        return PreconditionFailureException._(method, url, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="0" number="71">
<code>      case HttpStatusCode.invalidToken:</code>
</line>
<line hits="0" number="72">
<code>        return InvalidTokenException._(method, url, message);</code>
</line>
<line number="73">
<code>      default:</code>
</line>
<line hits="0" number="74">
<code>        return CosmosDbException._(method, url, statusCode, message);</code>
</line>
<line number="75">
<code>    }</code>
</line>
<line number="76">
<code>  }</code>
</line>
<line number="77">
<code/>
</line>
<line hits="1" number="78">
<code>  factory CosmosDbException(int statusCode, [String? message]) =&gt;</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="79">
<code>      CosmosDbException._internal('', '', statusCode, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="80">
<code/>
</line>
<line hits="1" number="81">
<code>  @override</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="82">
<code>  CosmosDbException _withContext(String method, String url) =&gt;</code>
</line>
<line hits="3" number="83">
<code>      CosmosDbException._internal(method, url, statusCode, message);</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line number="84">
<code/>
</line>
<line number="85">
<code>  final int statusCode;</code>
</line>
<line number="86">
<code>}</code>
</line>
<line number="87">
<code/>
</line>
<line number="88">
<code>class NotModifiedException extends CosmosDbException {</code>
</line>
<line hits="1" number="89">
<code>  NotModifiedException._(String method, String url, [String? message])</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="90">
<code>      : super._(method, url, HttpStatusCode.notModified, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="91">
<code>}</code>
</line>
<line number="92">
<code/>
</line>
<line number="93">
<code>class UnauthorizedException extends CosmosDbException {</code>
</line>
<line hits="1" number="94">
<code>  UnauthorizedException._(String method, String url, [String? message])</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="95">
<code>      : super._(method, url, HttpStatusCode.unauthorized, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="96">
<code>}</code>
</line>
<line number="97">
<code/>
</line>
<line number="98">
<code>class ForbiddenException extends CosmosDbException {</code>
</line>
<line hits="1" number="99">
<code>  ForbiddenException._(String method, String url, [String? message])</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="100">
<code>      : super._(method, url, HttpStatusCode.forbidden, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="101">
<code>}</code>
</line>
<line number="102">
<code/>
</line>
<line number="103">
<code>class InvalidTokenException extends CosmosDbException {</code>
</line>
<line hits="0" number="104">
<code>  InvalidTokenException._(String method, String url, [String? message])</code>
</line>
<line hits="0" number="105">
<code>      : super._(method, url, HttpStatusCode.invalidToken, message);</code>
</line>
<line number="106">
<code>}</code>
</line>
<line number="107">
<code/>
</line>
<line number="108">
<code>class ConflictException extends CosmosDbException {</code>
</line>
<line hits="1" number="109">
<code>  ConflictException._(String method, String url, [String? message])</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="110">
<code>      : super._(method, url, HttpStatusCode.conflict, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="111">
<code>}</code>
</line>
<line number="112">
<code/>
</line>
<line number="113">
<code>class NotFoundException extends CosmosDbException {</code>
</line>
<line hits="1" number="114">
<code>  NotFoundException._(String method, String url, [String? message])</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="115">
<code>      : super._(method, url, HttpStatusCode.notFound, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="116">
<code>}</code>
</line>
<line number="117">
<code/>
</line>
<line number="118">
<code>class PreconditionFailureException extends CosmosDbException {</code>
</line>
<line hits="1" number="119">
<code>  PreconditionFailureException._(String method, String url, [String? message])</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="120">
<code>      : super._(method, url, HttpStatusCode.preconditionFailure, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="121">
<code>}</code>
</line>
<line number="122">
<code/>
</line>
<line number="123">
<code>class BadRequestException extends CosmosDbException {</code>
</line>
<line hits="1" number="124">
<code>  BadRequestException._(String method, String url, String message)</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="125">
<code>      : super._(method, url, HttpStatusCode.badRequest, message);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="126">
<code/>
</line>
<line hits="0" number="127">
<code>  BadRequestException(String message) : this._('', '', message);</code>
</line>
<line number="128">
<code/>
</line>
<line hits="1" number="129">
<code>  @override</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="130">
<code>  BadRequestException _withContext(String method, String url) =&gt;</code>
</line>
<line hits="2" number="131">
<code>      BadRequestException._(method, url, message);</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line number="132">
<code>}</code>
</line>
<line number="133">
<code/>
</line>
<line number="134">
<code>class UnknownDocumentTypeException extends ContextualizedException {</code>
</line>
<line hits="1" number="135">
<code>  UnknownDocumentTypeException._(String method, String url, this.docType)</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="2" number="136">
<code>      : super._(method, url, 'Unknown document type $docType');</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line number="137">
<code/>
</line>
<line hits="2" number="138">
<code>  UnknownDocumentTypeException(Type docType) : this._('', '', docType);</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line number="139">
<code/>
</line>
<line hits="1" number="140">
<code>  @override</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="141">
<code>  UnknownDocumentTypeException _withContext(String method, String url) =&gt;</code>
</line>
<line hits="2" number="142">
<code>      UnknownDocumentTypeException._(method, url, docType);</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line number="143">
<code/>
</line>
<line number="144">
<code>  final Type docType;</code>
</line>
<line number="145">
<code>}</code>
</line>
<line number="146">
<code/>
</line>
<line number="147">
<code>class BadResponseException extends ContextualizedException {</code>
</line>
<line hits="0" number="148">
<code>  BadResponseException._(String method, String url, String message)</code>
</line>
<line hits="0" number="149">
<code>      : super._(method, url, message);</code>
</line>
<line number="150">
<code/>
</line>
<line hits="0" number="151">
<code>  BadResponseException(String message) : this._('', '', message);</code>
</line>
<line number="152">
<code/>
</line>
<line hits="0" number="153">
<code>  @override</code>
</line>
<line number="154">
<code>  BadResponseException _withContext(String method, String url) =&gt;</code>
</line>
<line hits="0" number="155">
<code>      BadResponseException._(method, url, message);</code>
</line>
<line number="156">
<code>}</code>
</line>
<line number="157">
<code/>
</line>
<line number="158">
<code>// internal use</code>
</line>
<line number="159">
<code>@internal</code>
</line>
<line number="160">
<code>extension ContextualizedExceptionInternalExt&lt;T&gt; on Future&lt;T&gt; {</code>
</line>
<line hits="1" number="161">
<code>  Future&lt;T&gt; rethrowContextualizedException(HttpCall call) =&gt;</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="2" number="162">
<code>      onError&lt;ContextualizedException&gt;((error, stackTrace) =&gt;</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="4" number="163">
<code>          throw error._withContext(call.method.name, call.uri));</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line number="164">
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false" show-details="false"/>
<base href="../"/>
<base href="../"/>
</coverage>
