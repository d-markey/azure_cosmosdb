<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2022-12-05" filename="line.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="1.0" lines-covered="13" lines-valid="13" package="/src/spatial" testname="lcov.info" version="1.5">
<lines>
<line>
<code>import '../indexing/data_type.dart';</code>
</line>
<line>
<code>import 'point.dart';</code>
</line>
<line>
<code/>
</line>
<line>
<code>/// Class representing a line.</code>
</line>
<line>
<code>class Line {</code>
</line>
<line hits="2">
<code>  Line();</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line hits="1">
<code>  final _points = &lt;Point&gt;[];</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Collection of points making up the line.</code>
</line>
<line hits="5">
<code>  Iterable&lt;Point&gt; get points =&gt; _points.map((p) =&gt; p);</code>
<hit count="5" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Adds a point to the line.</code>
</line>
<line hits="4">
<code>  void add(Point point) =&gt; _points.add(point);</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Adds a set of points to the line.</code>
</line>
<line hits="4">
<code>  void addAll(Iterable&lt;Point&gt; points) =&gt; _points.addAll(points);</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  // `true` iif the line contains no points.</code>
</line>
<line hits="4">
<code>  bool get isEmpty =&gt; points.isEmpty;</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  // `true` iif the line contains one or more points.</code>
</line>
<line hits="4">
<code>  bool get isNotEmpty =&gt; points.isNotEmpty;</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  // Returns a list where each entry represents a point's coordinates.</code>
</line>
<line hits="2">
<code>  List&lt;List&lt;double&gt;&gt; get coordinates =&gt;</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="6">
<code>      points.map((p) =&gt; p.coordinates).toList();</code>
<hit count="6" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line hits="3">
<code>  Map&lt;String, dynamic&gt; toJson() =&gt; {</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>        'type': DataType.lineString.name,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>        'coordinates': coordinates,</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>      };</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
<base href="../../"/>
<base href="../../"/>
</coverage>
