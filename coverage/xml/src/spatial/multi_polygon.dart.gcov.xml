<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2023-01-04" filename="multi_polygon.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.6666667" lines-covered="12" lines-valid="18" package="/src/spatial" testname="lcov.info" version="1.5">
<lines>
<line>
<code>import '../_internal/_linq_extensions.dart';</code>
</line>
<line>
<code>import '../indexing/data_type.dart';</code>
</line>
<line>
<code>import '../indexing/geospatial_config.dart';</code>
</line>
<line>
<code>import 'point.dart';</code>
</line>
<line>
<code>import 'polygon.dart';</code>
</line>
<line>
<code>import 'shape.dart';</code>
</line>
<line>
<code/>
</line>
<line>
<code>/// Class representing a list of polygons.</code>
</line>
<line>
<code>class MultiPolygon extends Shape {</code>
</line>
<line>
<code>  final _polygons = &lt;Polygon&gt;[];</code>
</line>
<line>
<code/>
</line>
<line>
<code>  @override</code>
</line>
<line>
<code>  final type = DataType.multiPolygon;</code>
</line>
<line>
<code/>
</line>
<line hits="1">
<code>  MultiPolygon();</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line hits="1">
<code>  @override</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="5">
<code>  List get coordinates =&gt; polygons.map((p) =&gt; p.coordinates).toList();</code>
<hit count="5" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  /// `true` iif the multi-polygon contains no polygon.</code>
</line>
<line hits="3">
<code>  bool get isEmpty =&gt; polygons.isEmpty;</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  /// `true` iif the multi-polygon contains one or more polygons.</code>
</line>
<line hits="3">
<code>  bool get isNotEmpty =&gt; polygons.isNotEmpty;</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  @override</code>
</line>
<line hits="0">
<code>  Iterable&lt;Iterable&lt;Point&gt;&gt; get paths =&gt; polygons.expand((p) =&gt; p.paths);</code>
</line>
<line>
<code/>
</line>
<line>
<code>  /// The list of polygons</code>
</line>
<line hits="3">
<code>  Iterable&lt;Polygon&gt; get polygons =&gt; _polygons.asIterable();</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Adds a polygon to the multi-polygon.</code>
</line>
<line hits="0">
<code>  void add(Polygon polygon) =&gt; _polygons.add(polygon);</code>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Adds a set of polygons to the multi-polygon.</code>
</line>
<line hits="3">
<code>  void addAll(Iterable&lt;Polygon&gt; polygons) =&gt; _polygons.addAll(polygons);</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line hits="1">
<code>  static MultiPolygon fromGeoJson(Map geoJson, GeospatialConfig config) =&gt;</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>      Shape.fromGeoJson&lt;MultiPolygon&gt;(geoJson, config);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line hits="0">
<code>  static MultiPolygon loadGeographyCoords(Iterable coords) =&gt; MultiPolygon()</code>
</line>
<line hits="0">
<code>    ..addAll(</code>
</line>
<line hits="0">
<code>      coords.cast&lt;Iterable&gt;().map(Polygon.loadGeographyCoords),</code>
</line>
<line>
<code>    );</code>
</line>
<line>
<code/>
</line>
<line hits="2">
<code>  static MultiPolygon loadGeometryCoords(Iterable coords) =&gt; MultiPolygon()</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>    ..addAll(</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>      coords.cast&lt;Iterable&gt;().map(Polygon.loadGeometryCoords),</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>    );</code>
</line>
<line>
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
<base href="../../"/>
<base href="../../"/>
</coverage>
