<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2022-12-17" filename="cosmos_db_permissions.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.89361703" lines-covered="42" lines-valid="47" package="/src/permissions" testname="lcov.info" version="1.5">
<lines>
<line>
<code>import 'package:azure_cosmosdb/src/_internal/_http_header.dart';</code>
</line>
<line>
<code/>
</line>
<line>
<code>import '../client/_context.dart';</code>
</line>
<line>
<code>import 'cosmos_db_permission.dart';</code>
</line>
<line>
<code>import 'cosmos_db_user.dart';</code>
</line>
<line>
<code>import 'cosmos_db_users.dart';</code>
</line>
<line>
<code/>
</line>
<line>
<code>@Deprecated('Use CosmosDbPermissions instead.')</code>
</line>
<line>
<code>typedef Permissions = CosmosDbPermissions;</code>
</line>
<line>
<code/>
</line>
<line>
<code>/// Class used to manage [CosmosDbPermission]s for CosmosDB [CosmosDbUsers].</code>
</line>
<line>
<code>class CosmosDbPermissions {</code>
</line>
<line hits="2">
<code>  CosmosDbPermissions(this._users);</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  final CosmosDbUsers _users;</code>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Lists permissions for a [user].</code>
</line>
<line hits="1">
<code>  Future&lt;Iterable&lt;CosmosDbPermission&gt;&gt; list(CosmosDbUser user,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>          {CosmosDbPermission? permission}) =&gt;</code>
</line>
<line hits="4">
<code>      _users.client.getMany&lt;CosmosDbPermission&gt;(</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line hits="4">
<code>        '${_users.url}/${user.id}/permissions',</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>        'Permissions',</code>
</line>
<line hits="2">
<code>        Context(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>          type: 'permissions',</code>
</line>
<line hits="4">
<code>          resId: '${_users.url}/${user.id}',</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>          builder: CosmosDbPermission.build,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="0">
<code>          token: permission?.token,</code>
</line>
<line>
<code>        ),</code>
</line>
<line>
<code>      );</code>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Retrieves permission with id [name] for the specified [user].</code>
</line>
<line hits="2">
<code>  Future&lt;CosmosDbPermission?&gt; get(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>    CosmosDbUser user,</code>
</line>
<line>
<code>    String name, {</code>
</line>
<line>
<code>    Duration? expiry,</code>
</line>
<line>
<code>    CosmosDbPermission? permission,</code>
</line>
<line>
<code>  }) {</code>
</line>
<line hits="2">
<code>    final context = Context(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>      type: 'permissions',</code>
</line>
<line>
<code>      throwOnNotFound: true,</code>
</line>
<line hits="1">
<code>      builder: CosmosDbPermission.build,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="0">
<code>      token: permission?.token,</code>
</line>
<line>
<code>    );</code>
</line>
<line hits="2">
<code>    final seconds = expiry?.inSeconds ?? 0;</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>    if (seconds &gt; 0) {</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>      context.addHeader(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>          HttpHeader.msDocumentDbExpirySeconds, seconds.toString());</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>    }</code>
</line>
<line hits="4">
<code>    return _users.client.get&lt;CosmosDbPermission&gt;(</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line hits="5">
<code>      '${_users.url}/${user.id}/permissions/$name',</code>
<hit count="5" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>      context,</code>
</line>
<line>
<code>    );</code>
</line>
<line hits="1">
<code>  }</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Grants the [user] the specified [userPermission].</code>
</line>
<line hits="2">
<code>  Future&lt;CosmosDbPermission&gt; grant(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>    CosmosDbUser user,</code>
</line>
<line>
<code>    CosmosDbPermission userPermission, {</code>
</line>
<line>
<code>    Duration? expiry,</code>
</line>
<line>
<code>    CosmosDbPermission? permission,</code>
</line>
<line>
<code>  }) {</code>
</line>
<line hits="2">
<code>    final context = Context(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>      type: 'permissions',</code>
</line>
<line hits="5">
<code>      resId: '${_users.url}/${user.id}',</code>
<hit count="5" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>      builder: CosmosDbPermission.build,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="0">
<code>      token: permission?.token,</code>
</line>
<line>
<code>    );</code>
</line>
<line hits="1">
<code>    final seconds = expiry?.inSeconds ?? 0;</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>    if (seconds &gt; 0) {</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>      context.addHeader(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>          HttpHeader.msDocumentDbExpirySeconds, seconds.toString());</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>    }</code>
</line>
<line hits="4">
<code>    return _users.client.post&lt;CosmosDbPermission&gt;(</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line hits="4">
<code>      '${_users.url}/${user.id}/permissions',</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>      userPermission,</code>
</line>
<line>
<code>      context,</code>
</line>
<line>
<code>    );</code>
</line>
<line hits="1">
<code>  }</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Updates the [userPermission] for the specified [user].</code>
</line>
<line hits="1">
<code>  Future&lt;CosmosDbPermission&gt; replace(</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>    CosmosDbUser user,</code>
</line>
<line>
<code>    CosmosDbPermission userPermission, {</code>
</line>
<line>
<code>    Duration? expiry,</code>
</line>
<line>
<code>    CosmosDbPermission? permission,</code>
</line>
<line>
<code>  }) {</code>
</line>
<line hits="2">
<code>    final context = Context(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>      type: 'permissions',</code>
</line>
<line hits="1">
<code>      builder: CosmosDbPermission.build,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="0">
<code>      token: permission?.token,</code>
</line>
<line>
<code>    );</code>
</line>
<line hits="1">
<code>    final seconds = expiry?.inSeconds ?? 0;</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1">
<code>    if (seconds &gt; 0) {</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>      context.addHeader(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>          HttpHeader.msDocumentDbExpirySeconds, seconds.toString());</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>    }</code>
</line>
<line hits="4">
<code>    return _users.client.put&lt;CosmosDbPermission&gt;(</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line hits="5">
<code>      '${_users.url}/${user.id}/permissions/${userPermission.id}',</code>
<hit count="5" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>      userPermission,</code>
</line>
<line>
<code>      context,</code>
</line>
<line>
<code>    );</code>
</line>
<line>
<code>  }</code>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Revokes permission with `id` for the specified [user].</code>
</line>
<line hits="1">
<code>  Future&lt;bool&gt; revoke(CosmosDbUser user, String name,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>          {bool throwOnNotFound = false, CosmosDbPermission? permission}) =&gt;</code>
</line>
<line hits="4">
<code>      _users.client.delete(</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line hits="4">
<code>        '${_users.url}/${user.id}/permissions/$name',</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line hits="2">
<code>        Context(</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>          type: 'permissions',</code>
</line>
<line>
<code>          throwOnNotFound: throwOnNotFound,</code>
</line>
<line hits="1">
<code>          builder: CosmosDbPermission.build,</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="0">
<code>          token: permission?.token,</code>
</line>
<line>
<code>        ),</code>
</line>
<line>
<code>      );</code>
</line>
<line>
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
<base href="../../"/>
<base href="../../"/>
</coverage>
