<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2025-01-06" filename="partition_key_range.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="0.9230769" lines-covered="12" lines-valid="13" package="src/partition" testname="lcov.info" version="1.6">
<lines>
<line number="1">
<code>import '../base_document.dart';</code>
</line>
<line number="2">
<code>import '_partition_key_hash_v2.dart';</code>
</line>
<line number="3">
<code>import 'partition_key.dart';</code>
</line>
<line number="4">
<code/>
</line>
<line number="5">
<code>/// Class representing a partition key range.</code>
</line>
<line number="6">
<code>class PartitionKeyRange extends BaseDocumentWithEtag {</code>
</line>
<line hits="1" number="7">
<code>  PartitionKeyRange(this.id, this.minInclusive, this.maxExclusive);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="8">
<code/>
</line>
<line number="9">
<code>  @override</code>
</line>
<line number="10">
<code>  final String id;</code>
</line>
<line number="11">
<code/>
</line>
<line number="12">
<code>  final String minInclusive;</code>
</line>
<line number="13">
<code>  final String maxExclusive;</code>
</line>
<line number="14">
<code/>
</line>
<line hits="0" number="15">
<code>  @override</code>
</line>
<line number="16">
<code>  dynamic toJson() =&gt; null;</code>
</line>
<line number="17">
<code/>
</line>
<line number="18">
<code>  /// Returns `true` is this partition key range contains the specified [hash].</code>
</line>
<line hits="1" number="19">
<code>  bool contains(PartitionKeyHashV2 hash) =&gt;</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="4" number="20">
<code>      minInclusive.compareTo(hash.hex) &lt;= 0 &amp;&amp;</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line hits="4" number="21">
<code>      0 &lt; maxExclusive.compareTo(hash.hex);</code>
<hit count="4" name="&lt;unnamed&gt;"/>
</line>
<line number="22">
<code/>
</line>
<line number="23">
<code>  /// Deserializes data from JSON object [json] into a new [PartitionKeyRange] instance.</code>
</line>
<line number="24">
<code>  /// Handles fields `id`, `minInclusive`, `maxExclusive`.</code>
</line>
<line hits="1" number="25">
<code>  static PartitionKeyRange fromJson(dynamic json) {</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="26">
<code>    final pkRange = PartitionKeyRange(</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="3" number="27">
<code>        json['id'], json['minInclusive'], json['maxExclusive']);</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="28">
<code>    pkRange.setEtag(json);</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line number="29">
<code>    return pkRange;</code>
</line>
<line number="30">
<code>  }</code>
</line>
<line number="31">
<code>}</code>
</line>
<line number="32">
<code/>
</line>
<line number="33">
<code>/// Extension on [Iterable] of [PartitionKeyRange].</code>
</line>
<line number="34">
<code>extension PartitionKeyRangeExt on Iterable&lt;PartitionKeyRange&gt; {</code>
</line>
<line number="35">
<code>  /// Returns the [PartitionKeyRange] for the specified [partitionKey], or `null` if</code>
</line>
<line number="36">
<code>  /// no match is found.</code>
</line>
<line hits="1" number="37">
<code>  PartitionKeyRange? findRangeFor(PartitionKey partitionKey) {</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="2" number="38">
<code>    final hash = PartitionKeyHashV2.hierarchical(partitionKey.values);</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="1" number="39">
<code>    return cast&lt;PartitionKeyRange?&gt;()</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line hits="3" number="40">
<code>        .singleWhere((r) =&gt; r!.contains(hash), orElse: () =&gt; null);</code>
<hit count="3" name="&lt;unnamed&gt;"/>
</line>
<line number="41">
<code>  }</code>
</line>
<line number="42">
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false" show-details="false"/>
<base href="../../"/>
<base href="../../"/>
</coverage>
