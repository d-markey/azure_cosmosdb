<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2023-01-29" filename="features.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="1.0" lines-covered="3" lines-valid="3" package="/client" testname="lcov.info" version="1.5">
<lines>
<line>
<code>const currentApiVersion = '2018-12-31';</code>
</line>
<line>
<code>const previewApiVersion = '2020-07-15';</code>
</line>
<line>
<code/>
</line>
<line>
<code>/// Class representing the features supported by a Cosmos DB client.</code>
</line>
<line>
<code>class Features {</code>
</line>
<line hits="1">
<code>  const Features._(this.version, {required this.hierarchicalPartitioning});</code>
<hit count="1" name="&lt;unnamed&gt;"/>
</line>
<line>
<code/>
</line>
<line>
<code>  final String version;</code>
</line>
<line>
<code>  final bool hierarchicalPartitioning;</code>
</line>
<line>
<code/>
</line>
<line>
<code>  static const _default = Features._('', hierarchicalPartitioning: false);</code>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Features for the current version (see [currentApiVersion]).</code>
</line>
<line>
<code>  static const current =</code>
</line>
<line>
<code>      Features._(currentApiVersion, hierarchicalPartitioning: false);</code>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Features for the preview version (see [previewApiVersion]).</code>
</line>
<line>
<code>  static const preview =</code>
</line>
<line>
<code>      Features._(previewApiVersion, hierarchicalPartitioning: true);</code>
</line>
<line>
<code/>
</line>
<line>
<code>  static const _features = [_default, current, preview];</code>
</line>
<line>
<code/>
</line>
<line>
<code>  /// Returns the features for the specified [version].</code>
</line>
<line hits="2">
<code>  static Features getFeatures(String version) =&gt;</code>
<hit count="2" name="&lt;unnamed&gt;"/>
</line>
<line hits="5">
<code>      _features.firstWhere((f) =&gt; f.version == version, orElse: () =&gt; _default);</code>
<hit count="5" name="&lt;unnamed&gt;"/>
</line>
<line>
<code>}</code>
</line>
</lines>
<config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false"/>
<base href="../"/>
<base href="../"/>
</coverage>
